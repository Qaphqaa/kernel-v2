{"version":3,"sources":["webpack://kernel-community/./content/en/build/tokenomics/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","List","Link","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","isMDXComponent"],"mappings":"2QAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAOL,EAAc,QACrBM,EAAON,EAAc,QACrBO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGT,GACF,YACD,OAAO,QAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,kBACN,MAAS,CACP,SAAY,aAHhB,mBAKsB,aAAGC,WAAW,KAChC,KAAQ,mBACR,aAAc,4BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,6LAA+K,aAAGA,WAAW,IACzL,KAAQ,uDADmK,oBAA/K,qUAGA,wPACA,yEAA2D,aAAGA,WAAW,IACrE,KAAQ,oBAD+C,iEAA3D,8rBAGA,cACE,GAAM,0BACN,MAAS,CACP,SAAY,aAHhB,2BAK8B,aAAGA,WAAW,KACxC,KAAQ,2BACR,aAAc,oCACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,qTACA,wbACA,mXACA,QAACR,EAAD,CAAMO,QAAQ,SACZ,QAACN,EAAD,CAAMQ,GAAG,yBAAyBF,QAAQ,SACxC,8EAEF,QAACN,EAAD,CAAMQ,GAAG,wCAAwCF,QAAQ,SACvD,8CAEF,QAACN,EAAD,CAAMQ,GAAG,gCAAgCF,QAAQ,SAC/C,6CAORF,EAAWK,gBAAiB","file":"component---content-en-build-tokenomics-index-mdx-b253f5996e42c33cf12a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst List = makeShortcode(\"List\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"teaching-tokens\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Teaching Tokens`}<a parentName=\"h1\" {...{\n        \"href\": \"#teaching-tokens\",\n        \"aria-label\": \"teaching tokens permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <p>{`Tokens serve as visible representation of facts, which is why they’re useful in value exchanges, as means of authentication, or for proving membership. This is because `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=-6BsiVyC1kM&t=1207s\"\n      }}>{`facts are values`}</a>{` which incorporate time; they are \"an event or thing known to have happened or existed\". The word comes from a past participle in Latin, factum, meaning \"something done\". Tokens on Ethereum are facts about a key value mapping in a shared contract, with a verifiable trail of the values associated with any key over time.`}</p>\n    <p>{`In computing, a token is a sequence of bits passed continuously between nodes in a fixed order, which enables a node to transmit information, or the smallest meaningful unit of information in a sequence of data for a compiler.`}</p>\n    <p>{`If we put these two views together, we can see that `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-5/\"\n      }}>{`tokens are likely the most potent form of cultural production`}</a>{` we have yet discovered. They represent meaningful facts which can be used to transmit information - to teach - in ways memes cannot, for two reasons. Firstly, memes need not be factual in the way tokens are (where ‘fact’ means a verifiable value on a public network). Secondly, memes propagate knowledge by virtue of when, how and where they are shared, though the act of sharing carries no explicit incentive. Because they represent a fact; holding, exchanging, buying or selling a token is a valuable action in a way sharing a meme is not. Whether explicitly incentivized sharing of cultural artefacts is a net positive remains to be seen, but it does certainly differentiate tokens from memes.`}</p>\n    <h2 {...{\n      \"id\": \"a-token-of-appreciation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`A Token of Appreciation`}<a parentName=\"h2\" {...{\n        \"href\": \"#a-token-of-appreciation\",\n        \"aria-label\": \"a token of appreciation permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`The goal of this guild is for people who already have a basic understanding of the token or mechnism being discussed to come together with subject matter experts, and together advance their understanding, perhaps to the point of being able to apply what they learn in their own projects.`}</p>\n    <p>{`This guild was started by KB4 Fellow Michael Keating, and we are endlessly grateful to him for taking the iniative and creating a space to explore this growing part of the web3 garden. Guilds are organic creatures who appear as and when they are needed and can be of use. If you're reading through this, we hope it'll give you the courage and tenacity required to start your own on a topic that is close to your heart.`}</p>\n    <p>{`In order to familiarise yourself through play, we suggest you start with the Token Engineering Commons simulations listed below. Here, you can learn about many aspects of mechanism design simply through tweaking parameters and observing the different kinds of outcomes they lead to, developing your intuition in a fun, engaging and safe environment.`}</p>\n    <List mdxType=\"List\">\n      <Link to=\"https://tecommons.org/\" mdxType=\"Link\">\n        <p>{`Sustainable `}{`&`}{` Ethical Design for Token Ecosystems`}</p>\n      </Link>\n      <Link to=\"https://config.tecommons.org/config/1\" mdxType=\"Link\">\n        <p>{`Join the Param Parties!`}</p>\n      </Link>\n      <Link to=\"https://sim.commonsstack.org/\" mdxType=\"Link\">\n        <p>{`The Commons Simulator`}</p>\n      </Link>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}